import { useSyncExternalStore } from 'use-sync-external-store/shim/with-selector';
import { createStore } from './vanilla.js';
const identity = (arg) => arg;
const useStore = (api, selector = identity) => {
  const slice = useSyncExternalStore(
    (listener) => api.subscribe(listener),
    () => selector(api.getState()),
    () => selector(api.getInitialState())
  );
  // React.useDebugValue(slice);
  return slice;
};
const createImpl = (createState) => {
  const api = createStore(createState);
  const useStore = (selector = identity) => {
    const slice = useSyncExternalStore(
      (listener) => api.subscribe(listener),
      () => selector(api.getState()),
      () => selector(api.getInitialState())
    );
    // React.useDebugValue(slice);
    return slice;
  };
  return { api, useStore };
};
