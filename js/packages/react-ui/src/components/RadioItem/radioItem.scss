@use "../../cssUtils" as cssUtils;

.crayon-radio-item-container {
  display: flex;
  align-items: center;
  gap: cssUtils.$spacing-2xs;
  padding-top: cssUtils.$spacing-3xs;
  padding-bottom: cssUtils.$spacing-3xs;
  padding-left: cssUtils.$spacing-0;
  padding-right: cssUtils.$spacing-2xs;
  width: 100%;
  max-width: 100%;
  overflow: hidden;
}

.crayon-radio-item-root {
  box-sizing: border-box;
  border-radius: cssUtils.$rounded-full;
  border: none;
  height: 14px;
  width: 14px;
  cursor: pointer;
  background-color: transparent;

  &[data-state] {
    // This makes the root element a styling context for children
    position: relative;
  }

  // Disabled state
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

.crayon-radio-item-svg {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

// First path - circle between border and center
.crayon-radio-item-svg-path {
  .crayon-radio-item-root[data-state="unchecked"] & {
    fill: cssUtils.$bg-container;

    .crayon-radio-item-root:hover:not(:disabled) & {
      fill: cssUtils.$bg-container;
    }
  }

  .crayon-radio-item-root[data-state="checked"] & {
    fill: cssUtils.$bg-container;
  }
}

// Border path
.crayon-radio-item-svg-border {
  .crayon-radio-item-root[data-state="unchecked"] & {
    stroke: cssUtils.$stroke-interactive-el;
  }

  .crayon-radio-item-root[data-state="checked"] & {
    stroke: cssUtils.$stroke-interactive-el-hover;
  }
}

// Inner circle path
.crayon-radio-item-svg-inner {
  .crayon-radio-item-root[data-state="checked"] & {
    fill: cssUtils.$bg-brand-el;
  }

  .crayon-radio-item-root[data-state="unchecked"] & {
    fill: cssUtils.$bg-container;
  }

  .crayon-radio-item-root[data-state="unchecked"]:hover:not(:disabled) & {
    fill: cssUtils.$stroke-default;
  }
}
.crayon-radio-item-label {
  flex: 1;
  @include cssUtils.typography(primary, default);
  color: cssUtils.$primary-text;
  &:disabled {
    color: cssUtils.$disabled-text;
  }
}
