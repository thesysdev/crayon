@use "../../cssUtils" as cssUtils;

.crayon-select-trigger {
  box-sizing: border-box;
  background-color: cssUtils.$bg-container;
  color: cssUtils.$primary-text;
  @include cssUtils.typography(label, default);
  border: 1px solid cssUtils.$stroke-default;
  outline: none;
  display: inline-flex;
  align-items: center;
  justify-content: space-between;

  &:hover {
    background: cssUtils.$bg-container-hover;
    border-color: cssUtils.$stroke-interactive-el;
    color: cssUtils.$secondary-text;
  }

  &:disabled {
    background-color: cssUtils.$bg-sunk;
    color: cssUtils.$disabled-text;
    border-color: cssUtils.$disabled-text;
    cursor: not-allowed;
  }

  &[data-state="open"] {
    border-color: cssUtils.$stroke-interactive-el;
    background-color: cssUtils.$bg-fill;
  }
  &[data-placeholder] {
    color: cssUtils.$disabled-text;
  }

  &-sm {
    padding: cssUtils.$spacing-2xs cssUtils.$spacing-s;
    border-radius: cssUtils.$rounded-xs;
  }
  &-md {
    padding: cssUtils.$spacing-xs cssUtils.$spacing-s;
    border-radius: cssUtils.$rounded-xs;
  }
  &-lg {
    padding: cssUtils.$spacing-s;
    border-radius: cssUtils.$rounded-xs;
  }
  &-icon {
    height: 16px;
    width: 16px;
  }
}

.crayon-select-content {
  box-sizing: border-box;
  position: relative;
  z-index: 50;
  max-height: 380px;
  min-width: var(--radix-select-trigger-width);
  overflow: hidden;
  border-radius: cssUtils.$rounded-m;
  background-color: cssUtils.$bg-container;
  border: 1px solid cssUtils.$stroke-default;
  box-shadow: cssUtils.$shadow-m;
  color: cssUtils.$primary-text;
}

.crayon-select-viewport {
  box-sizing: border-box;
  padding: 4px;

  &[data-position="popper"] {
    width: 100%;
  }
}

.crayon-select-label {
  box-sizing: border-box;
  padding: cssUtils.$spacing-xs cssUtils.$spacing-s;
  @include cssUtils.typography(primary, default);
}

.crayon-select-item {
  box-sizing: border-box;
  position: relative;
  display: flex;
  cursor: default;
  user-select: none;
  align-items: center;
  justify-content: space-between;
  border-radius: cssUtils.$rounded-s;
  padding-top: 6px;
  padding-bottom: 6px;
  @include cssUtils.typography(primary, default);
  color: cssUtils.$primary-text;
  outline: 0;

  // Variants based on showTick
  &--with-tick {
    padding-left: cssUtils.$spacing-xs;
    padding-right: cssUtils.$spacing-xl;
  }

  &--without-tick {
    padding-left: cssUtils.$spacing-xs;
    padding-right: cssUtils.$spacing-xl;
  }

  // States
  &[data-disabled] {
    pointer-events: none;
    opacity: 0.5;
  }

  &[data-highlighted] {
    color: cssUtils.$primary-text;
  }

  &:focus {
    background-color: cssUtils.$bg-sunk;
    color: cssUtils.$primary-text;
    outline: 1px solid cssUtils.$stroke-interactive-el;
    outline-offset: -1px;
  }

  &[data-state="checked"] {
    background-color: cssUtils.$bg-sunk;
    outline: 1px solid cssUtils.$stroke-interactive-el;
    outline-offset: -1px;
  }

  // Check indicator
  &-check-wrapper {
    position: absolute;
    right: 8px;
    height: 14px;
    width: 14px;
  }

  &-check-icon {
    height: 16px;
    width: 16px;
  }

  // Text content
  &-text {
    flex: 1;
    @include cssUtils.typography(primary, default);
    color: cssUtils.$disabled-text;
  }

  &-value {
    color: cssUtils.$secondary-text;
  }
}

.crayon-select-separator {
  box-sizing: border-box;
  margin: 4px -4px;
  height: 1px;
  border-top: 1px solid cssUtils.$stroke-default;
}
