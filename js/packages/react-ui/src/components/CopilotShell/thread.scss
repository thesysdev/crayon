@use "../../cssUtils" as cssUtils;

.crayon-copilot-shell-thread-container {
  flex: 1;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

.crayon-copilot-shell-thread-scroll-area {
  width: 100%;
  flex: 1;
  overflow: auto;
  padding: cssUtils.$spacing-l;
}

.crayon-copilot-shell-thread-messages {
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  gap: cssUtils.$spacing-xl;
}

.crayon-copilot-shell-thread-message-assistant {
  width: 100%;
  overflow: hidden;

  // override theme variables so that other crayon components don't depend on chat colors
  // this solves the case where the crayon-card component is used in the thread but without card component
  --crayon-primary-text: #{cssUtils.$chat-assistant-response-text};
  --crayon-container-fills: #{cssUtils.$chat-assistant-response-bg};

  &__content {
    display: flex;
    flex-direction: column;
    gap: cssUtils.$spacing-s;
    overflow: hidden;
    overflow-wrap: break-word;
    flex-grow: 1;
  }

  &__text {
    @include cssUtils.typography(primary, default);
    color: cssUtils.$chat-assistant-response-text;
  }
}

.crayon-copilot-shell-thread-message-user {
  display: flex;
  justify-content: flex-end;

  &__content {
    @include cssUtils.typography(primary, default);
    padding: cssUtils.$spacing-m cssUtils.$spacing-l;
    background-color: cssUtils.$chat-user-response-bg;
    color: cssUtils.$chat-user-response-text;
    border-radius: cssUtils.$rounded-2xl;
    overflow-wrap: break-word;
    max-width: 100%;
  }
}

.crayon-copilot-shell-thread-composer {
  width: 100%;
  padding: cssUtils.$spacing-m cssUtils.$spacing-l cssUtils.$spacing-l;
  background-color: cssUtils.$bg-container;

  &__input-wrapper {
    border: 1.256px solid cssUtils.$stroke-default;
    display: flex;
    align-items: flex-end;
    gap: cssUtils.$spacing-s;
    padding: cssUtils.$spacing-m;
    border-radius: cssUtils.$rounded-l;
  }

  &__input {
    flex-grow: 1;
    padding: 0;
    resize: none;
    margin: auto 0px;
    max-height: 154px;
    outline: none;
    border: none;
    background: transparent;
    overflow: hidden;
    @include cssUtils.typography(primary, default);
    color: cssUtils.$primary-text;
    &::placeholder {
      color: cssUtils.$disabled-text;
    }
  }
}
